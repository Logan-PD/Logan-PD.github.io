dijkstras routing algorithm for link state routing
	visualization

pthread barrier synchronization, 457 asn3

React hospital 

java zombie game


relevant courses
<h2>Favourite and Relevant courses</h3>
                        <li>Computer Science</li>
                        <ul>
                            <li><span class='green'>Networks</span>
                                <ul>
                                    <li>HTTP Proxy Server</li>
                                    <li>TCP & UDP mircroservice toy</li>
                                    <li>Distance-Vector Routing Simulation</li>
                                    <li>Google Cloud remote server traffic measurement</li>
                                    <li>QUIC Research Poster</li>
                                </ul>
                            </li>
                            <li><span class='pink'>Operating Systems</span>
                                <ul>
                                    <li>C/C++ Pthread - Multithreaded Programming</li>
                                    <li>System Call Optimizations</li>
                                    <li>Various low level, algorithmic optimizations</li>
                                </ul>
                            </li>
                            <li><span class='l-blue'>Programming Paradigms</span>
                                <ul>
                                    <li>Functional - Haskell: Parser, foldr, recursing, induction</li>
                                    <li>Logical - Prolog</li>
                                </ul>
                            </li>
                            <li><span class='orange'>Data Structures and Algorithms</span>
                                <ul>
                                    <li>Implementation of Binary Tree</li>
                                    <li>Merge - Insertion Hybrid Sort</li>
                                    <li>Proof and Big O of algorithms correctness</li>
                                </ul>
                            </li>
                            <li><span class='purple'>Math</span>
                                <ul>
                                    <li>Discrete Math</li>
                                    <li>Calculus</li>
                                    <li>Linear Algebra</li>
                                    <li>Statistics</li>
                                </ul>
                            </li>
                        </ul>
                        
                        <li>Philosophy</li>
                        <ul>
                            <li>Epistemology</li>
                            <li>Meta-Logic: Godels completeness Theorem</li>
                            <li>Morality, Virtue and Society</li>
                            <li>IT Ethics</li>
                            <li>20th Century Continental Philosophy</li>
                        </ul>



a class='contact' href='httpsgithub.comLogan-PD'img class='logo' src='photosGitHub_Logo.png'Githuba
                    a class='contact' href='httpswww.linkedin.cominlogan-perry-din' target='_blank'img class='logo' src='photoslinkedin-32.png'linkedina
                    a class='contact' href='mailtologan.perrydin@gmail.com'img class='logo' src='photosmail-32.png'logan.perrydin@gmail.coma




<p>Object-Oriented implementation of a blockchain, containing transactions of a cryptocurrency.<br>
                    Quick-start: <code>buy</code> to create a block, <code>mine</code> to calculate a hash and add to chain, <code>show </code>to see the contents of the newly added block. </p>
                    <ul>
                        <li>Fields of Block object dumped into json file with sorted order</li>
                        <li>Hashes of blocks computed with SHA256 with json file as input</li>
                        <li>Proof of work ensures hash starts with difficulty <code>(Block_chain attribute = 4)</code> amount of leading zeroes</li>
                        <li>While loop computes new hashes by incrementing <code>Block nonce</code> attribute until valid hash is attained</li>
                    </ul>
                    <p>Todo: use as means to research P2P in Python3, add merkel trees. <br>
                    <a href='https://github.com/Logan-PD/BlockChain'>Source Code Repository</a>